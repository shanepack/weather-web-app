"use client";
import { useState, useEffect } from 'react';
import {InputUserLocation} from './scripts.js';
import axios from 'axios';

export default function RectanglePage() {
  
  const [userLocation, setUserLocation] = useState('Pearland');
  const [showHome, setHomePage] = useState(true);
  const [showList, setListPage] = useState(false);
  const [showSettings, setSettingsPage] = useState(false);
  const [previousLocations, setPreviousLocations] = useState<string[]>([]);

  // const handleKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {
  //   if (e.key === 'Enter') {
  //     sendLocationToPython();
  //   }
  // };

  // const sendLocationToPython = async () => {
  //   try {
  //     console.log('-----Sending data to python-----');
  //     const encodedLocation = encodeURIComponent(userLocation);
  //     const response = await axios.post('/', { userLocation: encodedLocation });
  //     console.log('-----Returned-----');
      
  //   } catch (error) {
  //     console.error('Error sending data to Python:', error);
  //   }
  // };

  useEffect(() => {
    InputUserLocation((userLocation : string) => {
        setPreviousLocations((prevLocations) => [userLocation, ...prevLocations]);
    });
}, []);

  useEffect(() => {
    InputUserLocation(setUserLocation);
  }, []);

  const toggleHome = () => {
    if (!showHome) {
      setHomePage(true);
      setListPage(false);
      setSettingsPage(false);
    }
  };

  const toggleList = () => {
    if (!showList) {
      setHomePage(false);
      setListPage(true);
      setSettingsPage(false);
    }
  };

  const toggleSettings = () => {
    if (!showSettings) {
      setHomePage(false);
      setListPage(false);
      setSettingsPage(true);
    }
  };
  
  return (
    <div className="bg-gray-800 h-screen w-screen grid grid-cols-[auto,1fr] p-8 gap-8">
      {/* Settings sidebar */}
      <div className="bg-gray-700 flex flex-col justify-between p-8 rounded-[20px] w-[120px]">
        <button className={`bg-gray-600 p-6 text-white mb-2 ${showHome ? 'active' : ''}`} onClick={toggleHome}>
          H
          O
          M
          E
        </button>
        <button className={`bg-gray-600 p-6 text-white mb-2 ${showList ? 'active' : ''}`} onClick={toggleList}>
          L
          I
          S
          T
        </button>
        <button className={`bg-gray-600 p-6 text-white ${showSettings ? 'active' : ''}`} onClick={toggleSettings}>
          S
          E
          T
          T
          I
          N
          G
          S
        </button>
      </div>

      {/* Main content */}
      {showHome && (
      <div className="flex flex-col">
        {/* Top bar */}
        <div className="flex justify-between items-center mb-8">
          <input
            type="text"
            id="locationInput"
            placeholder="Search for a City..."
            className="p-2 bg-gray-700 rounded-[20px] text-white focus:outline-none focus:border-white"
            //onKeyDown={handleKeyPress}
          />
          <p className="text-white text-2xl">8:00PM</p>
        </div>

        <div className="flex-1 grid grid-cols-2 gap-8">
        {/* Main Left section */}
        <div className="grid grid-rows-3 gap-8">
            {/* City, Temperature & Today's Forecast */}
            <div className="bg-black p-8 rounded-[20px] flex flex-col justify-between row-span-2">
                <div>
                    <p className="text-white text-4xl mb-2">{userLocation}</p>
                    <p className="text-white text-6xl">110Â°</p>
                </div>

                <div className="bg-[#0C1117] p-8 rounded-[20px]">
                    <p className="text-white text-2xl">TODAY'S FORECAST</p>
                </div>
            </div>

            {/* Air Conditions */}
            <div className="bg-gray-700 p-8 rounded-[20px]">
                <p className="text-white text-2xl">AIR CONDITIONS</p>
            </div>
        </div>

          {/* Main Right section */}
          <div className="grid grid-rows-2 gap-8">
            {/* ChatGPT block */}
            <div className="bg-white p-6 rounded-[20px] min-h-[300px]"> {/* Use the desired value in place of 300px */}
              <p className="text-gray-800 mb-2" style={{ fontSize: 'clamp(0.8rem, 3vw, 2rem)' }}>
                This evening in Pearland, Independence Park is open until 10:00 PM and offers a nice late-night option for a peaceful walk or some stargazing in a park setting.
              </p>
              <p className="text-gray-600 text-right text-sm">
                Suggestion Generated by ChatGPT
              </p>
            </div>

            {/* 7 Day Forecast */}
            <div className="bg-gray-700 p-8 rounded-[20px] min-h-[300px]"> {/* Use the desired value in place of 300px */}
              <p className="text-white text-2xl">7 DAY FORECAST</p>
            </div>
          </div>
        </div>
      </div>
      )}

      {/* List Page */}
      {showList && (
      <div className="grid grid-cols-1 grid-rows-1 gap-8">
        <div className="grid grid-rows-1 gap-8">
          <div className="bg-gray-700 p-8 rounded-[20px] min-h-[100px]">
            <p className="text-white text-4xl mb-4">Previous Locations</p>
            <p>
                {previousLocations.map((location, index) => (
                    <li key={index} className="text-white text-sm">
                        {location}
                    </li>
                ))}
            </p>
          </div>
        </div>
      </div>
      )}

      {/* Setting Page */}
      {showSettings && (
      <div className="grid grid-cols-1 grid-rows-1 gap-8">
        <div className="grid grid-rows-1 gap-8">
          <div className="bg-gray-700 p-8 rounded-[20px] min-h-[100px]">
            <p className="text-white text-4xl mb-4">Appearance</p>
            <div className="inline-flex rounded-md shadow-sm mb-4">
              <a href="#" className="px-16 py-8 text-sm font-medium text-blue-700 bg-white border border-gray-200 rounded-l-lg hover:bg-gray-100 focus:z-10 focus:ring-2 focus:ring-blue-700 focus:text-blue-700 dark:bg-gray-700 dark:border-gray-600 dark:text-white dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-blue-500 dark:focus:text-white" aria-current="page">
                Dark
              </a>
              <a href="#" className="px-16 py-8 text-sm font-medium text-gray-900 bg-white border border-gray-200 rounded-r-md hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-2 focus:ring-blue-700 focus:text-blue-700 dark:bg-gray-700 dark:border-gray-600 dark:text-white dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-blue-500 dark:focus:text-white border-t border-b">
                Light
              </a>
            </div>
            <p className="text-white text-4xl mb-4">Units</p>
            <p className="text-gray-300 text-2xl mb-4">Temperature</p>
            <div className="inline-flex rounded-md shadow-sm mb-4">
              <a href="#" className="px-16 py-8 text-sm font-medium text-blue-700 bg-white border border-gray-200 rounded-l-lg hover:bg-gray-100 focus:z-10 focus:ring-2 focus:ring-blue-700 focus:text-blue-700 dark:bg-gray-700 dark:border-gray-600 dark:text-white dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-blue-500 dark:focus:text-white" aria-current="page">
                Fahrenheit
              </a>
              <a href="#" className="px-16 py-8 text-sm font-medium text-gray-900 bg-white border border-gray-200 rounded-r-md hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-2 focus:ring-blue-700 focus:text-blue-700 dark:bg-gray-700 dark:border-gray-600 dark:text-white dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-blue-500 dark:focus:text-white border-t border-b">
                Celsius
              </a>
            </div>
            <p className="text-gray-300 text-2xl mb-4">Wind Speed</p>
            <div className="inline-flex rounded-md shadow-sm mb-4">
              <a href="#" className="px-16 py-8 text-sm font-medium text-blue-700 bg-white border border-gray-200 rounded-l-lg hover:bg-gray-100 focus:z-10 focus:ring-2 focus:ring-blue-700 focus:text-blue-700 dark:bg-gray-700 dark:border-gray-600 dark:text-white dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-blue-500 dark:focus:text-white" aria-current="page">
                m/s
              </a>
              <a href="#" className="px-16 py-8 text-sm font-medium text-gray-900 bg-white border border-gray-200 rounded-r-md hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-2 focus:ring-blue-700 focus:text-blue-700 dark:bg-gray-700 dark:border-gray-600 dark:text-white dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-blue-500 dark:focus:text-white border-t border-b">
                km/h
              </a>
            </div>
          </div>
        </div>
      </div>
      )}
    </div>
  );
}